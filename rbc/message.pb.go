// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.20.3
// source: rbc/message.proto

package rbc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum để xác định loại thông điệp
type MessageType int32

const (
	MessageType_INIT  MessageType = 0
	MessageType_ECHO  MessageType = 1
	MessageType_READY MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "INIT",
		1: "ECHO",
		2: "READY",
	}
	MessageType_value = map[string]int32{
		"INIT":  0,
		"ECHO":  1,
		"READY": 2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_rbc_message_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_rbc_message_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_rbc_message_proto_rawDescGZIP(), []int{0}
}

// Cấu trúc thông điệp RBC
type RBCMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=rbc.MessageType" json:"type,omitempty"`
	// ID của node khởi tạo broadcast này
	OriginalSenderId int32 `protobuf:"varint,2,opt,name=original_sender_id,json=originalSenderId,proto3" json:"original_sender_id,omitempty"`
	// ID duy nhất cho mỗi lần broadcast để phân biệt các lần gửi khác nhau
	MessageId string `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Dữ liệu thực tế đang được gửi đi
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	// ID của node gửi thông điệp mạng này (quan trọng để theo dõi ai đã gửi ECHO/READY)
	NetworkSenderId int32 `protobuf:"varint,5,opt,name=network_sender_id,json=networkSenderId,proto3" json:"network_sender_id,omitempty"`
}

func (x *RBCMessage) Reset() {
	*x = RBCMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbc_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBCMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBCMessage) ProtoMessage() {}

func (x *RBCMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rbc_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBCMessage.ProtoReflect.Descriptor instead.
func (*RBCMessage) Descriptor() ([]byte, []int) {
	return file_rbc_message_proto_rawDescGZIP(), []int{0}
}

func (x *RBCMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_INIT
}

func (x *RBCMessage) GetOriginalSenderId() int32 {
	if x != nil {
		return x.OriginalSenderId
	}
	return 0
}

func (x *RBCMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RBCMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RBCMessage) GetNetworkSenderId() int32 {
	if x != nil {
		return x.NetworkSenderId
	}
	return 0
}

var File_rbc_message_proto protoreflect.FileDescriptor

var file_rbc_message_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x62, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x62, 0x63, 0x22, 0xc5, 0x01, 0x0a, 0x0a, 0x52, 0x42, 0x43,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x62, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x2a, 0x2c, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x43, 0x48,
	0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x72, 0x62, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rbc_message_proto_rawDescOnce sync.Once
	file_rbc_message_proto_rawDescData = file_rbc_message_proto_rawDesc
)

func file_rbc_message_proto_rawDescGZIP() []byte {
	file_rbc_message_proto_rawDescOnce.Do(func() {
		file_rbc_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_rbc_message_proto_rawDescData)
	})
	return file_rbc_message_proto_rawDescData
}

var file_rbc_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rbc_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_rbc_message_proto_goTypes = []interface{}{
	(MessageType)(0),   // 0: rbc.MessageType
	(*RBCMessage)(nil), // 1: rbc.RBCMessage
}
var file_rbc_message_proto_depIdxs = []int32{
	0, // 0: rbc.RBCMessage.type:type_name -> rbc.MessageType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rbc_message_proto_init() }
func file_rbc_message_proto_init() {
	if File_rbc_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rbc_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBCMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rbc_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rbc_message_proto_goTypes,
		DependencyIndexes: file_rbc_message_proto_depIdxs,
		EnumInfos:         file_rbc_message_proto_enumTypes,
		MessageInfos:      file_rbc_message_proto_msgTypes,
	}.Build()
	File_rbc_message_proto = out.File
	file_rbc_message_proto_rawDesc = nil
	file_rbc_message_proto_goTypes = nil
	file_rbc_message_proto_depIdxs = nil
}
